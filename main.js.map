{"version":3,"file":"main.js","mappings":"mBACO,IAAMA,EAAS,CACpBC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAKPC,EAAc,SAACC,GAC1B,OAAIA,EAAOC,GACFD,EAAOE,OAETC,QAAQC,OAAO,WAADC,OAAYL,EAAOM,QAC1C,EAmDO,SAASC,EAAiBC,GAC/B,OAAOC,MAAM,GAADJ,OAAIV,EAAOC,QAAO,WAAAS,OAAUG,GAAM,CAC5CE,OAAQ,SACRb,QAASF,EAAOE,UACfc,KAAKZ,EACV,CCpEO,IAAMa,EAAeC,SAASC,cAAc,kBAAkBC,QAG9D,SAASC,EACdJ,EACAK,EACAC,EACAC,EACAC,EACAb,GAEA,IAAMc,EAAcT,EACjBE,cAAc,iBACdQ,WAAU,GACPC,EAAeF,EAAYP,cAAc,wBAEzCU,EAAiBH,EAAYP,cAAc,sBAC3CW,EAAeJ,EAAYP,cAAc,mBAEzCY,EAAYL,EAAYP,cAAc,gBACtCa,EAAYN,EAAYP,cAAc,gBAmC5C,OAlCAY,EAAUE,IAAMX,EAAKY,KACrBH,EAAUI,IAAMb,EAAKc,KACrBJ,EAAUK,YAAcf,EAAKc,KAC7BN,EAAaO,YAAcf,EAAKgB,MAAMC,OAElCd,EAAce,MAAQlB,EAAKmB,MAAMD,KACnCZ,EAAac,UAAUC,IAAI,YAGzBrB,EAAKgB,MAAMM,MAAK,SAACC,GAAI,OAAKA,EAAKL,MAAQf,EAAce,GAAG,KAC1DX,EAAea,UAAUC,IAAI,+BAI/Bf,EAAakB,iBAAiB,SAAS,SAAUC,GAC/CnC,EAAiBU,EAAKkB,KACnBxB,MAAK,YAsBL,SAAoB+B,GACRA,EAAIC,OAAOC,QAAQ,iBAC3BC,QACX,CAxBQC,CAAWJ,EACb,IACCK,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,GACJ,IAGAxB,EAAeiB,iBAAiB,SAAS,SAAUC,GACjDvB,EAAYuB,EAAKzB,EAAMQ,EACzB,IAGAC,EAAUe,iBAAiB,SAAS,WAClCvB,EAAeD,EACjB,IAEOI,CACT,CASO,SAASF,EAAYuB,EAAKzB,EAAMQ,GDMhC,IAAoBjB,ECLrBkC,EAAIC,OAAON,UAAUc,SAAS,gCDKT3C,ECJZS,EAAKkB,IDKX1B,MAAM,GAADJ,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,GAAM,CAClDE,OAAQ,SACRb,QAASF,EAAOE,UACfc,KAAKZ,ICPHY,MAAK,SAACyC,GACLV,EAAIC,OAAON,UAAUQ,OAAO,+BAC5BpB,EAAaO,YAAcoB,EAAInB,MAAMC,MACvC,IACCa,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,IDKC,SAAiBxC,GACtB,OAAOC,MAAM,GAADJ,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,GAAM,CAClDE,OAAQ,MACRb,QAASF,EAAOE,UACfc,KAAKZ,EACV,CCRIsD,CAAQpC,EAAKkB,KACVxB,MAAK,SAACyC,GACLV,EAAIC,OAAON,UAAUC,IAAI,+BACzBb,EAAaO,YAAcoB,EAAInB,MAAMC,OACrCe,QAAQC,IAAIjC,EAAKgB,MACnB,IACCc,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,GAEN,CCtFO,SAASM,EAAUrC,GACxBA,EAAKoB,UAAUC,IAAI,mBACnBzB,SAAS4B,iBAAiB,UAAWc,EACvC,CAGO,SAASC,EAAWvC,GACzBA,EAAKoB,UAAUQ,OAAO,mBACtBhC,SAAS4C,oBAAoB,UAAWF,EAC1C,CAGO,SAASA,EAAWb,GACT,WAAZA,EAAIgB,KACNF,EAAW3C,SAASC,cAAc,oBAEtC,CAEO,SAAS6C,EAAkBjB,GAC5BA,EAAIkB,gBAAkBlB,EAAIC,QAC5Ba,EAAWd,EAAIC,OAEnB,CCzBA,IAYakB,EAAiB,SAACC,EAAaC,EAAYC,GACtD,IAAMC,EAAYH,EAAYhD,cAAc,IAADT,OAAK0D,EAAWvD,GAAE,WAC7DuD,EAAW1B,UAAUQ,OAAOmB,EAAiBE,iBACzCD,IACFA,EAAU5B,UAAUQ,OAAOmB,EAAiBG,YAC5CF,EAAUjC,YAAc,IAE1B+B,EAAWK,kBAAkB,GAC/B,EAqBMC,EAAoB,SAACC,EAAWC,EAAeP,GAC/CM,EAAU/B,MAAK,SAACwB,GAAU,OAAMA,EAAWS,SAASC,KAAK,KAC3DF,EAAcG,UAAW,EACzBH,EAAclC,UAAUC,IAAI0B,EAAiBW,uBAE7CJ,EAAcG,UAAW,EACzBH,EAAclC,UAAUQ,OAAOmB,EAAiBW,qBAEpD,EA+BaC,EAAkB,SAACC,EAAkBb,GAChD,IAAMM,EAAYQ,MAAMC,KACtBF,EAAiBG,iBAAiBhB,EAAiBD,aAE/CQ,EAAgBM,EAAiB/D,cACrCkD,EAAiBO,eAGnBD,EAAUW,SAAQ,SAAClB,GACjBF,EAAegB,EAAkBd,EAAYC,EAC/C,IAEAK,EAAkBC,EAAWC,EAAeP,EAC9C,E,sGCxEA,IAAMkB,EAAYrE,SAASmE,iBAAiB,UAGtChB,EAAmB,CACvBa,iBAAkB,eAClBd,WAAY,gBACZQ,cAAe,iBACfI,oBAAqB,0BACrBT,gBAAiB,yBACjBC,WAAY,4BAIRgB,EAAatE,SAASC,cAAc,iBAEpCsE,EAAUvE,SAASC,cAAc,YACjCuE,EAAcD,EAAQtE,cAAc,kBACpCwE,EAAoBD,EAAYvE,cAAc,yBAC9CyE,EAAmBH,EAAQtE,cAAc,wBACzC0E,EAAeH,EAAYvE,cAAc,mBACzC2E,EAAqBJ,EAAYvE,cAAc,yBAC/C4E,EAAeN,EAAQtE,cAAc,mBAErC6E,EAAc9E,SAAS+E,MAAM,gBAC7BC,EAAYF,EAAYG,SAAS/D,KACjCgE,EAAWJ,EAAYG,SAASE,YAEhCC,EAAiBpF,SAASC,cAAc,qBACxCoF,EAAaD,EAAenF,cAAc,iBAC1CqF,EAAoBF,EAAenF,cAAc,mBAEjDsF,EAAmBvF,SAASC,cAAc,wBAC1CuF,EAAgBxF,SAASC,cAAc,oBAEvCwF,EAAWzF,SAAS+E,MAAM,aAC1BW,EAAYD,EAASR,SAAS,cAC9BjE,EAAOyE,EAASR,SAASjE,KAEzB2E,EAAc3F,SAASC,cAAc,sBACrC2F,EAAgB5F,SAASC,cAAc,mBACvC4F,EAAa7F,SAAS+E,MAAM,eAC5Be,EAAiBD,EAAWZ,SAASjE,KAS3C,SAAS+E,EAAcC,EAAQC,EAAWC,GACxCF,EAAO7E,YAAc8E,EAAY,gBAAkBC,CACrD,CAiCA,SAAS7F,EAAeD,GACtBiF,EAAWtE,IAAMX,EAAKY,KACtBqE,EAAWpE,IAAMb,EAAKc,KACtBoE,EAAkBnE,YAAcf,EAAKc,KACrCuB,EAAU2C,EACZ,CA0BAf,EAAUD,SAAQ,SAAUhE,GACDA,EAAKH,cAAc,iBAC3B2B,iBAAiB,SAAS,WACzCe,EAAWvC,EACb,IACAA,EAAKwB,iBAAiB,QAASkB,GAC/B1C,EAAKoB,UAAUC,IAAI,oBACrB,IAGAnC,QAAQ6G,IAAI,CJhIHvG,MAAM,GAADJ,OAAIV,EAAOC,QAAO,aAAa,CACzCc,OAAQ,MACRb,QAASF,EAAOE,UACfc,KAAKZ,GAKDU,MAAM,GAADJ,OAAIV,EAAOC,QAAO,WAAW,CACvCc,OAAQ,MACRb,QAASF,EAAOE,UACfc,KAAKZ,KIsHPY,MAAK,SAAAsG,GAAkC,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAAhC7F,EAAa8F,EAAA,GAAEC,EAAWD,EAAA,GAChCjE,QAAQC,IAAI9B,GACZ6B,QAAQC,IAAIiE,GAEZ3B,EAAaxD,YAAcZ,EAAcW,KACzC0D,EAAmBzD,YAAcZ,EAAcgG,MAC/C1B,EAAa2B,MAAMC,gBAAkB,OAAHjH,OAAUe,EAAcmG,OAAM,KAGhEJ,EAAYlC,SAAQ,SAAUhE,GAC5B,IAAMuG,EAAcxG,EAClBJ,EACAK,EACAC,EACAC,EACAC,EACAb,GAEF4E,EAAWsC,OAAOD,EACpB,GACF,IACCzE,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,IAGK,IAAM0E,EAAa,SAACC,GACP7C,MAAMC,KACtB4C,EAAa3C,iBAAiBhB,EAAiBD,aAEvCkB,SAAQ,SAAClB,GACjBA,EAAW6D,MAAQ,EACrB,GACF,EAEAlB,EAAWjE,iBAAiB,UAAU,SAAUC,GAC9CA,EAAImF,iBACJ,IJ/F0BC,EI+FpBC,EAAarF,EAAIsF,UACjBC,EAAoBF,EAAW/F,YACrC4E,EAAcmB,GAAY,EAAME,IJjGNH,EIkGdnB,EAAeiB,MJjGpBnH,MAAM,GAADJ,OAAIV,EAAOC,QAAO,oBAAoB,CAChDc,OAAQ,QACRb,QAASF,EAAOE,QAChBqI,KAAMC,KAAKC,UAAU,CACnBb,OAAQO,MAETnH,KAAKZ,II4FLY,MAAK,SAACX,GACLyG,EAAcY,MAAMC,gBAAkB,OAAHjH,OAAUL,EAAOuH,OAAM,KAC1D/D,EAAWgD,GACX9D,EAAIC,OAAO0F,OACb,IACCtF,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,IACCsF,SAAQ,WACP1B,EAAcmB,GAAY,EAAOE,EACnC,GACJ,IAGA3C,EAAkB7C,iBAAiB,SAAS,WAC1Ca,EAAU+C,GACVR,EAAU+B,MAAQpC,EAAaxD,YAC/B+D,EAAS6B,MAAQnC,EAAmBzD,YACpC4C,EAAgBe,EAAa3B,EAC/B,IAGAuB,EAAiB9C,iBAAiB,SAAS,WACzCa,EAAU8C,GACVxB,EAAgBwB,EAAkBpC,GAClC0D,EAAWtB,EACb,IAGAV,EAAajD,iBAAiB,SAAS,WACrCa,EAAUkD,GACV5B,EAAgB8B,EAAY1C,GAC5B0D,EAAWlB,EACb,IAGAF,EAAS7D,iBAAiB,UArJ1B,SAAoBC,GAClBA,EAAImF,iBACJ,IAAME,EAAarF,EAAIsF,UACjBC,EAAoBF,EAAW/F,YACrC4E,EAAcmB,GAAY,EAAME,GJlC3B,SAAqB1B,EAAW1E,GACrC,OAAOpB,MAAM,GAADJ,OAAIV,EAAOC,QAAO,UAAU,CACtCc,OAAQ,OACRb,QAASF,EAAOE,QAChBqI,KAAMC,KAAKC,UAAU,CACnBrG,KAAMwE,EACN1E,KAAMA,MAEPlB,KAAKZ,EACV,CI2BEwI,CAAYhC,EAAUqB,MAAO/F,EAAK+F,OAC/BjH,MAAK,SAACM,GACL,IAAMuH,EAAiBxH,EACrBJ,EACAK,EACAC,EACAC,EACAF,EAAKmB,MACL7B,GAEF4E,EAAWsD,QAAQD,GACnBhF,EAAW4C,GACX1D,EAAIC,OAAO0F,QACXzD,EAAgBwB,EAAkBpC,EACpC,IACCjB,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,IACCsF,SAAQ,WACP1B,EAAcmB,GAAY,EAAOE,EACnC,GACJ,IA6HAtC,EAAYlD,iBAAiB,UAlH7B,SAAiCC,GAC/BA,EAAImF,iBACJ,IAAME,EAAarF,EAAIsF,UACjBC,EAAoBF,EAAW/F,YACrC4E,EAAcmB,GAAY,EAAME,GJpF3B,SAA0BpC,EAAWE,GAC1C,OAAOtF,MAAM,GAADJ,OAAIV,EAAOC,QAAO,aAAa,CACzCc,OAAQ,QACRb,QAASF,EAAOE,QAChBqI,KAAMC,KAAKC,UAAU,CACnBrG,KAAM8D,EACNuB,MAAOrB,KAGb,CI6EE2C,CAAiB7C,EAAU+B,MAAO7B,EAAS6B,OACxCjH,MAAK,SAACgI,GACL,IAAMC,EAAcD,GAAQA,EAAK5G,KAAO4G,EAAK5G,KAAO8D,EAAU+B,MACxDiB,EAAeF,GAAQA,EAAKvB,MAAQuB,EAAKvB,MAAQrB,EAAS6B,MAChEpC,EAAaxD,YAAc4G,EAC3BnD,EAAmBzD,YAAc6G,EACjCrF,EAAW6C,EACb,IACCtD,OAAM,SAACC,GACNC,QAAQC,IAAI,WAAD7C,OAAY2C,GACzB,IACCsF,SAAQ,WACP1B,EAAcmB,GAAY,EAAOE,EACnC,GACJ,IDnEgC,SAACjE,GACdc,MAAMC,KACrBlE,SAASmE,iBAAiBhB,EAAiBa,mBAEpCI,SAAQ,SAACJ,IApBM,SAACA,EAAkBb,GAC3C,IAAMM,EAAYQ,MAAMC,KACtBF,EAAiBG,iBAAiBhB,EAAiBD,aAE/CQ,EAAgBM,EAAiB/D,cACrCkD,EAAiBO,eAEnBF,EAAkBC,EAAWC,EAAeP,GAC5CM,EAAUW,SAAQ,SAAClB,GACjBA,EAAWtB,iBAAiB,SAAS,YAtCzB,SAACoC,EAAkBd,EAAYC,GACzCD,EAAWS,SAASsE,gBACtB/E,EAAWK,kBAAkBL,EAAWgF,QAAQC,cAEhDjF,EAAWK,kBAAkB,IAG1BL,EAAWS,SAASC,MAQvBZ,EAAegB,EAAkBd,EAAYC,GArC1B,SACrBa,EACAd,EACAiF,EACAhF,GAEA,IAAMC,EAAYY,EAAiB/D,cAAc,IAADT,OAAK0D,EAAWvD,GAAE,WAClEuD,EAAW1B,UAAUC,IAAI0B,EAAiBE,iBAC1CD,EAAUjC,YAAcgH,EACxB/E,EAAU5B,UAAUC,IAAI0B,EAAiBG,WAC3C,CAoBI8E,CACEpE,EACAd,EACAA,EAAWmF,kBACXlF,EAKN,CAsBMmF,CAAQtE,EAAkBd,EAAYC,GACtCK,EAAkBC,EAAWC,EAAeP,EAC9C,GACF,GACF,CAOIoF,CAAkBvE,EAAkBb,EACtC,GACF,CC6JAqF,CAAiBrF,E","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Данные для успешной авторизации на сервере\r\nexport const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-30\",\r\n  headers: {\r\n    authorization: \"2acff074-5445-48a3-9f5a-ba8d36b1cf4b\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Функция обработки ответа от сервера\r\nexport const getResponse = (result) => {\r\n  if (result.ok) {\r\n    return result.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${result.status}`);\r\n};\r\n\r\n// Функция загрузки информации о пользователе с сервера\r\nexport function loadingProfileInfo() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция загрузки карточек с сервера\r\nexport function loadingCardsInfo() {\r\n  return fetch(`${config.baseUrl}/cards `, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция редактирования профиля с сервера\r\nexport function patchEditProfile(nameInput, jobInput) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameInput,\r\n      about: jobInput,\r\n    }),\r\n  });\r\n}\r\n\r\n// Функция отправки данных карточки на сервер\r\nexport function postNewCard(placeName, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: placeName,\r\n      link: link,\r\n    }),\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция загрузки лайков\r\nexport function loadingLikesQuantity() {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция удаления карточки с сервера\r\nexport function deleteCardServer(id) {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция удаления лайка\r\nexport function deleteLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция постановки лайка\r\nexport function putLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция изменения аватара\r\nexport function patchAvatar(avatarUrl) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl,\r\n    }),\r\n  }).then(getResponse);\r\n}\r\n","import { putLike, deleteLike } from \"./api.js\";\r\n\r\n// @todo: Темплейт карточки\r\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nexport function createCard(\r\n  cardTemplate,\r\n  item,\r\n  openImagePopup,\r\n  likedButton,\r\n  profileResult,\r\n  deleteCardServer,\r\n) {\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const likesCounter = cardElement.querySelector(\".likes__counter\");\r\n\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  cardImage.src = item.link;\r\n  cardImage.alt = item.name;\r\n  cardTitle.textContent = item.name;\r\n  likesCounter.textContent = item.likes.length;\r\n\r\n  if (profileResult._id !== item.owner._id) {\r\n    deleteButton.classList.add(\"inactive\");\r\n  }\r\n\r\n  if (item.likes.some((like) => like._id === profileResult._id)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  // Вызов функции удаления карточки с сервера\r\n  deleteButton.addEventListener(\"click\", function (evt) {\r\n    deleteCardServer(item._id)\r\n      .then(() => {\r\n        removeCard(evt);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  });\r\n\r\n  // Вызов функции постановки лайка\r\n  cardLikeButton.addEventListener(\"click\", function (evt) {\r\n    likedButton(evt, item, likesCounter);\r\n  });\r\n\r\n  // Вызов функции открытия картинки у карточки\r\n  cardImage.addEventListener(\"click\", function () {\r\n    openImagePopup(item);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\nexport function removeCard(evt) {\r\n  const listItem = evt.target.closest(\".places__item\");\r\n  listItem.remove();\r\n}\r\n\r\n// Функция лайка\r\nexport function likedButton(evt, item, likesCounter) {\r\n  if (evt.target.classList.contains(\"card__like-button_is-active\")) {\r\n    deleteLike(item._id)\r\n      .then((res) => {\r\n        evt.target.classList.remove(\"card__like-button_is-active\");\r\n        likesCounter.textContent = res.likes.length;\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  } else {\r\n    putLike(item._id)\r\n      .then((res) => {\r\n        evt.target.classList.add(\"card__like-button_is-active\");\r\n        likesCounter.textContent = res.likes.length;\r\n        console.log(item.likes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  }\r\n}\r\n","// import {hideInputError} from \"../components/validation.js\";\r\n\r\n// Функция добавления класса popup_is-opened\r\nexport function openModal(item) {\r\n  item.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeByEsc);\r\n}\r\n\r\n// Функция удаления класса popup_is-opened\r\nexport function closeModal(item) {\r\n  item.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeByEsc);\r\n}\r\n\r\n// Функция закрытия через Esc\r\nexport function closeByEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n\r\nexport function closePopupOverlay(evt) {\r\n  if (evt.currentTarget === evt.target) {\r\n    closeModal(evt.target);\r\n  }\r\n}\r\n","const showInputError = (\r\n  popupFormElement,\r\n  popupInput,\r\n  errorMessage,\r\n  validationConfig,\r\n) => {\r\n  const formError = popupFormElement.querySelector(`.${popupInput.id}-error`);\r\n  popupInput.classList.add(validationConfig.inputErrorClass);\r\n  formError.textContent = errorMessage;\r\n  formError.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nexport const hideInputError = (formElement, popupInput, validationConfig) => {\r\n  const formError = formElement.querySelector(`.${popupInput.id}-error`);\r\n  popupInput.classList.remove(validationConfig.inputErrorClass);\r\n  if (formError) {\r\n    formError.classList.remove(validationConfig.errorClass);\r\n    formError.textContent = \"\";\r\n  }\r\n  popupInput.setCustomValidity(\"\");\r\n};\r\n\r\nconst isValid = (popupFormElement, popupInput, validationConfig) => {\r\n  if (popupInput.validity.patternMismatch) {\r\n    popupInput.setCustomValidity(popupInput.dataset.errorMessage);\r\n  } else {\r\n    popupInput.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!popupInput.validity.valid) {\r\n    showInputError(\r\n      popupFormElement,\r\n      popupInput,\r\n      popupInput.validationMessage,\r\n      validationConfig,\r\n    );\r\n  } else {\r\n    hideInputError(popupFormElement, popupInput, validationConfig);\r\n  }\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (inputList.some((popupInput) => !popupInput.validity.valid)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (popupFormElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    popupFormElement.querySelectorAll(validationConfig.popupInput),\r\n  );\r\n  const buttonElement = popupFormElement.querySelector(\r\n    validationConfig.buttonElement,\r\n  );\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((popupInput) => {\r\n    popupInput.addEventListener(\"input\", () => {\r\n      isValid(popupFormElement, popupInput, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.popupFormElement),\r\n  );\r\n  formList.forEach((popupFormElement) => {\r\n    setEventListeners(popupFormElement, validationConfig);\r\n  });\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((popupInput) => !popupInput.validity.valid);\r\n};\r\n\r\nexport const clearValidation = (popupFormElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    popupFormElement.querySelectorAll(validationConfig.popupInput),\r\n  );\r\n  const buttonElement = popupFormElement.querySelector(\r\n    validationConfig.buttonElement,\r\n  );\r\n\r\n  inputList.forEach((popupInput) => {\r\n    hideInputError(popupFormElement, popupInput, validationConfig);\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n","import \"./pages/index.css\";\r\n\r\nimport { cardTemplate, createCard, likedButton } from \"./components/card.js\";\r\n\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  closePopupOverlay,\r\n} from \"./components/modal.js\";\r\n\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\n\r\nimport {\r\n  loadingProfileInfo,\r\n  loadingCardsInfo,\r\n  patchEditProfile,\r\n  postNewCard,\r\n  deleteCardServer,\r\n  patchAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst allPopups = document.querySelectorAll(\".popup\");\r\n\r\n// Объект настроек валидации\r\nconst validationConfig = {\r\n  popupFormElement: \".popup__form\",\r\n  popupInput: \".popup__input\",\r\n  buttonElement: \".popup__button\",\r\n  inactiveButtonClass: \".popup__button_disabled\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\n// @todo: DOM узлы\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\nconst profile = document.querySelector(\".profile\");\r\nconst profileInfo = profile.querySelector(\".profile__info\");\r\nconst profileEditButton = profileInfo.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = profile.querySelector(\".profile__add-button\");\r\nconst profileTitle = profileInfo.querySelector(\".profile__title\");\r\nconst profileDescription = profileInfo.querySelector(\".profile__description\");\r\nconst profileImage = profile.querySelector(\".profile__image\");\r\n\r\nconst profileForm = document.forms[\"edit-profile\"];\r\nconst nameInput = profileForm.elements.name;\r\nconst jobInput = profileForm.elements.description;\r\n\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\r\nconst imagePopupCaption = popupTypeImage.querySelector(\".popup__caption\");\r\n\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\n\r\nconst newPlace = document.forms[\"new-place\"];\r\nconst placeName = newPlace.elements[\"place-name\"];\r\nconst link = newPlace.elements.link;\r\n\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nconst avatarForm = document.forms[\"avatar-form\"];\r\nconst avatarInputUrl = avatarForm.elements.link;\r\n\r\n/**\r\n * Утилитарная функция для изменения состояния кнопки.\r\n * @param {HTMLElement} button\r\n * @param {boolean} isLoading\r\n * @param {string} defaultText\r\n */\r\n\r\nfunction renderLoading(button, isLoading, defaultText) {\r\n  button.textContent = isLoading ? \"Сохранение...\" : defaultText;\r\n}\r\n\r\n// Функция добавления новой карточки\r\nfunction addNewCard(evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  renderLoading(formButton, true, defaultTextButton);\r\n\r\n  postNewCard(placeName.value, link.value)\r\n    .then((item) => {\r\n      const newCardElement = createCard(\r\n        cardTemplate,\r\n        item,\r\n        openImagePopup,\r\n        likedButton,\r\n        item.owner,\r\n        deleteCardServer,\r\n      );\r\n      placesList.prepend(newCardElement);\r\n      closeModal(popupTypeNewCard);\r\n      evt.target.reset();\r\n      clearValidation(popupTypeNewCard, validationConfig);\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(formButton, false, defaultTextButton);\r\n    });\r\n}\r\n\r\n// Функция открытия поп-апа для картинок\r\nfunction openImagePopup(item) {\r\n  popupImage.src = item.link;\r\n  popupImage.alt = item.name;\r\n  imagePopupCaption.textContent = item.name;\r\n  openModal(popupTypeImage);\r\n}\r\n\r\n// Функция редактирования профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  renderLoading(formButton, true, defaultTextButton);\r\n\r\n  patchEditProfile(nameInput.value, jobInput.value)\r\n    .then((data) => {\r\n      const updatedName = data && data.name ? data.name : nameInput.value;\r\n      const updatedAbout = data && data.about ? data.about : jobInput.value;\r\n      profileTitle.textContent = updatedName;\r\n      profileDescription.textContent = updatedAbout;\r\n      closeModal(popupTypeEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(formButton, false, defaultTextButton);\r\n    });\r\n}\r\n\r\n// Функция перебора всех поп-апов для удаления класса popup_is-opened\r\nallPopups.forEach(function (item) {\r\n  const popupCloseButton = item.querySelector(\".popup__close\");\r\n  popupCloseButton.addEventListener(\"click\", function () {\r\n    closeModal(item);\r\n  });\r\n  item.addEventListener(\"click\", closePopupOverlay);\r\n  item.classList.add(\"popup_is-animated\");\r\n});\r\n\r\n// Вывод данных о профиле и карточках с сервера\r\nPromise.all([loadingProfileInfo(), loadingCardsInfo()])\r\n  .then(([profileResult, cardsResult]) => {\r\n    console.log(profileResult);\r\n    console.log(cardsResult);\r\n\r\n    profileTitle.textContent = profileResult.name;\r\n    profileDescription.textContent = profileResult.about;\r\n    profileImage.style.backgroundImage = `url(${profileResult.avatar})`;\r\n\r\n    // Вывод карточек на страницу\r\n    cardsResult.forEach(function (item) {\r\n      const eachElement = createCard(\r\n        cardTemplate,\r\n        item,\r\n        openImagePopup,\r\n        likedButton,\r\n        profileResult,\r\n        deleteCardServer,\r\n      );\r\n      placesList.append(eachElement);\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    console.log(`Ошибка: ${error}`);\r\n  });\r\n\r\n// Функция очистки полей формы\r\nexport const clearState = (inputElement) => {\r\n  const inputList = Array.from(\r\n    inputElement.querySelectorAll(validationConfig.popupInput),\r\n  );\r\n  inputList.forEach((popupInput) => {\r\n    popupInput.value = \"\";\r\n  });\r\n};\r\n\r\navatarForm.addEventListener(\"submit\", function (evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  renderLoading(formButton, true, defaultTextButton);\r\n  patchAvatar(avatarInputUrl.value)\r\n    .then((result) => {\r\n      profileAvatar.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupAvatar);\r\n      evt.target.reset();\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(formButton, false, defaultTextButton);\r\n    });\r\n});\r\n\r\n// Вызов функции открытия поп-апа редактирования профиля при клике на карандаш\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(profileForm, validationConfig);\r\n});\r\n\r\n// Вызов функции открытия поп-апа добавления нового места при клике на плюсик\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeNewCard);\r\n  clearValidation(popupTypeNewCard, validationConfig);\r\n  clearState(popupTypeNewCard);\r\n});\r\n\r\n// Вызов функции открытия поп-апа аватара при клике на изображение профиля\r\nprofileImage.addEventListener(\"click\", function () {\r\n  openModal(popupAvatar);\r\n  clearValidation(avatarForm, validationConfig);\r\n  clearState(popupAvatar);\r\n});\r\n\r\n// Вызов функции добавления новой карточки\r\nnewPlace.addEventListener(\"submit\", addNewCard);\r\n\r\n// Вызов функции редактирования профиля\r\nprofileForm.addEventListener(\"submit\", handleProfileFormSubmit);\r\n\r\n// Вызов функции включения валидации всех форм\r\nenableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","result","ok","json","Promise","reject","concat","status","deleteCardServer","id","fetch","method","then","cardTemplate","document","querySelector","content","createCard","item","openImagePopup","likedButton","profileResult","cardElement","cloneNode","deleteButton","cardLikeButton","likesCounter","cardImage","cardTitle","src","link","alt","name","textContent","likes","length","_id","owner","classList","add","some","like","addEventListener","evt","target","closest","remove","removeCard","catch","error","console","log","contains","res","putLike","openModal","closeByEsc","closeModal","removeEventListener","key","closePopupOverlay","currentTarget","hideInputError","formElement","popupInput","validationConfig","formError","inputErrorClass","errorClass","setCustomValidity","toggleButtonState","inputList","buttonElement","validity","valid","disabled","inactiveButtonClass","clearValidation","popupFormElement","Array","from","querySelectorAll","forEach","allPopups","placesList","profile","profileInfo","profileEditButton","profileAddButton","profileTitle","profileDescription","profileImage","profileForm","forms","nameInput","elements","jobInput","description","popupTypeImage","popupImage","imagePopupCaption","popupTypeNewCard","popupTypeEdit","newPlace","placeName","popupAvatar","profileAvatar","avatarForm","avatarInputUrl","renderLoading","button","isLoading","defaultText","all","_ref","_ref2","cardsResult","about","style","backgroundImage","avatar","eachElement","append","clearState","inputElement","value","preventDefault","avatarUrl","formButton","submitter","defaultTextButton","body","JSON","stringify","reset","finally","postNewCard","newCardElement","prepend","patchEditProfile","data","updatedName","updatedAbout","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}