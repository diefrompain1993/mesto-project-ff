{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// Данные для успешной авторизации на сервере\r\nexport const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-30\",\r\n  headers: {\r\n    authorization: \"2acff074-5445-48a3-9f5a-ba8d36b1cf4b\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n// Функция обработки ответа от сервера\r\nexport const getResponse = (result) => {\r\n  if (result.ok) {\r\n    return result.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${result.status}`);\r\n};\r\n\r\n// Функция загрузки информации о пользователе с сервера\r\nexport function loadingProfileInfo() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция загрузки карточек с сервера\r\nexport function loadingCardsInfo() {\r\n  return fetch(`${config.baseUrl}/cards `, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция редактирования профиля с сервера\r\nexport function patchEditProfile(nameInput, jobInput) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameInput,\r\n      about: jobInput,\r\n    }),\r\n  });\r\n}\r\n\r\n// Функция отправки данных карточки на сервер\r\nexport function postNewCard(placeName, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: placeName,\r\n      link: link,\r\n    }),\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция загрузки лайков\r\nexport function loadingLikesQuantity() {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция удаления карточки с сервера\r\nexport function deleteCardServer(id) {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция удаления лайка\r\nexport function deleteLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция постановки лайка\r\nexport function putLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(getResponse);\r\n}\r\n\r\n// Функция изменения аватара\r\nexport function patchAvatar(avatarUrl) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl,\r\n    }),\r\n  }).then(getResponse);\r\n}\r\n","import { putLike, deleteLike } from \"./api.js\";\r\n\r\n// @todo: Темплейт карточки\r\nexport const cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nexport function createCard(\r\n  cardTemplate,\r\n  item,\r\n  openImagePopup,\r\n  likedButton,\r\n  profileResult,\r\n  deleteCardServer,\r\n) {\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n\r\n  const cardLikeButton = cardElement.querySelector(\".card__like-button\");\r\n  const likesCounter = cardTemplate.querySelector(\".likes__counter\");\r\n\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  cardImage.src = item.link;\r\n  cardImage.alt = item.name;\r\n  cardTitle.textContent = item.name;\r\n  likesCounter.textContent = item.likes.length;\r\n\r\n  // Скрыть кнопку удаления, если карточку загрузил не я\r\n  if (profileResult._id !== item.owner._id) {\r\n    deleteButton.classList.add(\"inactive\");\r\n  }\r\n\r\n  // Закрасить кнопку лайка там, где я его поставил\r\n  if (item.likes.some((like) => like._id === profileResult._id)) {\r\n    cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  // Вызов функции удаления карточки с сервера\r\n  deleteButton.addEventListener(\"click\", function (evt) {\r\n    deleteCardServer(item._id)\r\n      .then(() => {\r\n        removeCard(evt);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  });\r\n\r\n  // Вызов функции постановки лайка\r\n  cardLikeButton.addEventListener(\"click\", function (evt) {\r\n    likedButton(evt, item, likesCounter);\r\n  });\r\n\r\n  // Вызов функции открытия картинки у карточки\r\n  cardImage.addEventListener(\"click\", function () {\r\n    openImagePopup(item);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\nexport function removeCard(evt) {\r\n  const listItem = evt.target.closest(\".places__item\");\r\n  listItem.remove();\r\n}\r\n\r\n// Функция лайка\r\nexport function likedButton(evt, item, likesCounter) {\r\n  if (evt.target.classList.contains(\"card__like-button_is-active\")) {\r\n    deleteLike(item._id)\r\n      .then((res) => {\r\n        evt.target.classList.remove(\"card__like-button_is-active\");\r\n        likesCounter.textContent = res.likes.length;\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  } else {\r\n    putLike(item._id)\r\n      .then((res) => {\r\n        evt.target.classList.add(\"card__like-button_is-active\");\r\n        likesCounter.textContent = res.likes.length;\r\n        console.log(item.likes);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Ошибка: ${error}`);\r\n      });\r\n  }\r\n}\r\n","// import {hideInputError} from \"../components/validation.js\";\r\n\r\n// Функция добавления класса popup_is-opened\r\nexport function openModal(item) {\r\n  item.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closeByEsc);\r\n}\r\n\r\n// Функция удаления класса popup_is-opened\r\nexport function closeModal(item) {\r\n  item.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeByEsc);\r\n}\r\n\r\n// Функция закрытия через Esc\r\nexport function closeByEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    closeModal(document.querySelector(\".popup_is-opened\"));\r\n  }\r\n}\r\n\r\nexport function closePopupOverlay(evt) {\r\n  if (evt.currentTarget === evt.target) {\r\n    closeModal(evt.target);\r\n  }\r\n}\r\n","// Функция, которая добавляет класс с ошибкой\r\nconst showInputError = (\r\n    popupFormElement,\r\n    popupInput,\r\n    errorMessage,\r\n    validationConfig,\r\n  ) => {\r\n    const formError = popupFormElement.querySelector(`.${popupInput.id}-error`);\r\n    popupInput.classList.add(validationConfig.inputErrorClass);\r\n    formError.textContent = errorMessage;\r\n    formError.classList.add(validationConfig.errorClass);\r\n  };\r\n  \r\n  // Функция, которая удаляет класс с ошибкой\r\n  export const hideInputError = (formElement, popupInput, validationConfig) => {\r\n    const formError = formElement.querySelector(`.${popupInput.id}-error`);\r\n    popupInput.classList.remove(validationConfig.inputErrorClass);\r\n    if (formError) {\r\n      formError.classList.remove(validationConfig.errorClass);\r\n      formError.textContent = \"\";\r\n    }\r\n  };\r\n  \r\n  // Функция, которая проверяет валидность поля\r\n  const isValid = (popupFormElement, popupInput, validationConfig) => {\r\n    if (popupInput.validity.patternMismatch) {\r\n      popupInput.setCustomValidity(popupInput.dataset.errorMessage);\r\n    } else {\r\n      popupInput.setCustomValidity(\"\");\r\n    }\r\n  \r\n    if (!popupInput.validity.valid) {\r\n      showInputError(\r\n        popupFormElement,\r\n        popupInput,\r\n        popupInput.validationMessage,\r\n        validationConfig,\r\n      );\r\n    } else {\r\n      hideInputError(popupFormElement, popupInput, validationConfig);\r\n    }\r\n  };\r\n  \r\n  // Функция, которая обрабатывает все инпуты\r\n  const setEventListeners = (popupFormElement, validationConfig) => {\r\n    const inputList = Array.from(\r\n      popupFormElement.querySelectorAll(validationConfig.popupInput),\r\n    );\r\n    const buttonElement = popupFormElement.querySelector(\r\n      validationConfig.buttonElement,\r\n    );\r\n    toggleButtonState(inputList, buttonElement);\r\n    inputList.forEach((popupInput) => {\r\n      popupInput.addEventListener(\"input\", () => {\r\n        isValid(popupFormElement, popupInput, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n  };\r\n  \r\n  // Функция, которая добавляет слушатель на все формы\r\n  export const enableValidation = (validationConfig) => {\r\n    const formList = Array.from(\r\n      document.querySelectorAll(validationConfig.popupFormElement),\r\n    );\r\n    formList.forEach((popupFormElement) => {\r\n      popupFormElement.addEventListener(\"submit\", (evt) => {\r\n        evt.preventDefault();\r\n      });\r\n      setEventListeners(popupFormElement, validationConfig);\r\n    });\r\n  };\r\n  \r\n  // Функция, которая ищет хотя-бы одно невалидное поле\r\n  const hasInvalidInput = (inputList) => {\r\n    return inputList.some((popupInput) => {\r\n      return !popupInput.validity.valid;\r\n    });\r\n  };\r\n  \r\n  // Функция, которая активирует или деактивирует кнопку\r\n  const toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n    // Если есть хотя бы один невалидный инпут\r\n    if (hasInvalidInput(inputList)) {\r\n      // сделаем кнопку неактивной\r\n      buttonElement.disabled = true;\r\n    } else {\r\n      // иначе сделаем кнопку активной\r\n      buttonElement.disabled = false;\r\n    }\r\n  };\r\n  \r\n  export const clearValidation = (popupFormElement, validationConfig) => {\r\n    const inputList = Array.from(\r\n      popupFormElement.querySelectorAll(validationConfig.popupInput),\r\n    );\r\n    const buttonElement = popupFormElement.querySelector(\r\n      validationConfig.buttonElement,\r\n    );\r\n  \r\n    inputList.forEach((popupInput) => {\r\n      hideInputError(popupFormElement, popupInput, validationConfig);\r\n    });\r\n  \r\n    toggleButtonState(inputList, buttonElement, validationConfig);\r\n  };\r\n  ","import \"./pages/index.css\";\r\n\r\nimport { cardTemplate, createCard, likedButton } from \"./components/card.js\";\r\n\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  closePopupOverlay,\r\n} from \"./components/modal.js\";\r\n\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\n\r\nimport {\r\n  loadingProfileInfo,\r\n  loadingCardsInfo,\r\n  patchEditProfile,\r\n  postNewCard,\r\n  deleteCardServer,\r\n  patchAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst allPopups = document.querySelectorAll(\".popup\");\r\n\r\n// Объект настроек валидации\r\nconst validationConfig = {\r\n  popupFormElement: \".popup__form\",\r\n  popupInput: \".popup__input\",\r\n  buttonElement: \".popup__button\",\r\n  inactiveButtonClass: \".popup__button_disabled\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\n// @todo: DOM узлы\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\nconst profile = document.querySelector(\".profile\");\r\nconst profileInfo = profile.querySelector(\".profile__info\");\r\nconst profileEditButton = profileInfo.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = profile.querySelector(\".profile__add-button\");\r\nconst profileTitle = profileInfo.querySelector(\".profile__title\");\r\nconst profileDescription = profileInfo.querySelector(\".profile__description\");\r\nconst profileImage = profile.querySelector(\".profile__image\");\r\n\r\nconst formElement = document.forms[\"edit-profile\"];\r\nconst nameInput = formElement.elements.name;\r\nconst jobInput = formElement.elements.description;\r\n\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupImage = popupTypeImage.querySelector(\".popup__image\");\r\nconst popupCaption = popupTypeImage.querySelector(\".popup__caption\");\r\n\r\nconst popupTypeNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\n\r\nconst newPlace = document.forms[\"new-place\"];\r\nconst placeName = newPlace.elements[\"place-name\"];\r\nconst link = newPlace.elements.link;\r\n\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst profileAvatar = document.querySelector(\".profile__image\");\r\nconst avatarForm = document.forms[\"avatar-form\"];\r\nconst avatarInputUrl = avatarForm.elements.link;\r\n\r\n// Функция добавления новой карточки\r\nfunction addNewCard(evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  formButton.textContent = \"Сохранение...\";\r\n\r\n  postNewCard(placeName.value, link.value)\r\n    .then((item) => {\r\n      const newCardElement = createCard(\r\n        cardTemplate,\r\n        item,\r\n        openImagePopup,\r\n        likedButton,\r\n        item.owner,\r\n        deleteCardServer,\r\n      );\r\n      placesList.prepend(newCardElement);\r\n      closeModal(popupTypeNewCard);\r\n      evt.target.reset();\r\n      clearValidation(popupTypeNewCard, validationConfig);\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      formButton.textContent = defaultTextButton;\r\n    });\r\n}\r\n\r\n// Функция открытия поп-апа для картинок\r\nfunction openImagePopup(item) {\r\n  popupImage.src = item.link;\r\n  popupImage.alt = item.name;\r\n  popupCaption.textContent = item.name;\r\n  openModal(popupTypeImage);\r\n}\r\n\r\n// Функция редактирования профиля\r\nfunction handleProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  formButton.textContent = \"Сохранение...\";\r\n\r\n  patchEditProfile(nameInput.value, jobInput.value)\r\n    .then(() => {\r\n      profileTitle.textContent = nameInput.value;\r\n      profileDescription.textContent = jobInput.value;\r\n      closeModal(popupTypeEdit);\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      formButton.textContent = defaultTextButton;\r\n    });\r\n}\r\n\r\n// Функция перебора всех поп-апов для удаления класса popup_is-opened\r\nallPopups.forEach(function (item) {\r\n  const popupCloseButton = item.querySelector(\".popup__close\");\r\n  popupCloseButton.addEventListener(\"click\", function () {\r\n    closeModal(item);\r\n  });\r\n  item.addEventListener(\"click\", closePopupOverlay);\r\n  item.classList.add(\"popup_is-animated\");\r\n});\r\n\r\n// Вывод данных о профиле и карточках с сервера\r\nPromise.all([loadingProfileInfo(), loadingCardsInfo()])\r\n  .then(([profileResult, cardsResult]) => {\r\n    console.log(profileResult);\r\n    console.log(cardsResult);\r\n\r\n    profileTitle.textContent = profileResult.name;\r\n    profileDescription.textContent = profileResult.about;\r\n    profileImage.style.backgroundImage = `url(${profileResult.avatar})`;\r\n\r\n    // @todo: Вывести карточки на страницу\r\n    cardsResult.forEach(function (item) {\r\n      const eachElement = createCard(\r\n        cardTemplate,\r\n        item,\r\n        openImagePopup,\r\n        likedButton,\r\n        profileResult,\r\n        deleteCardServer,\r\n      );\r\n      placesList.append(eachElement);\r\n    });\r\n  })\r\n  .catch((error) => {\r\n    console.log(`Ошибка: ${error}`);\r\n  });\r\n\r\n// Функция очистки полей формы\r\nexport const clearState = (inputElement) => {\r\n  const inputList = Array.from(\r\n    inputElement.querySelectorAll(validationConfig.popupInput),\r\n  );\r\n  inputList.forEach((popupInput) => {\r\n    popupInput.value = \"\";\r\n  });\r\n};\r\n\r\n// Вызов функции редактирования аватара\r\navatarForm.addEventListener(\"submit\", function (evt) {\r\n  evt.preventDefault();\r\n  const formButton = evt.submitter;\r\n  const defaultTextButton = formButton.textContent;\r\n  formButton.textContent = \"Сохранение...\";\r\n  patchAvatar(avatarInputUrl.value)\r\n    .then((result) => {\r\n      profileAvatar.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupAvatar);\r\n      evt.target.reset();\r\n    })\r\n    .catch((error) => {\r\n      console.log(`Ошибка: ${error}`);\r\n    })\r\n    .finally(() => {\r\n      formButton.textContent = defaultTextButton;\r\n    });\r\n});\r\n\r\n// Вызов функции открытия поп-апа редактирования профиля нажатием на карандаш\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeEdit);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(formElement, validationConfig);\r\n});\r\n\r\n// Вызов функции открытия поп-апа добавления нового места нажатием на плюсик\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeNewCard);\r\n  clearValidation(popupTypeNewCard, validationConfig);\r\n  clearState(popupTypeNewCard);\r\n});\r\n\r\n// Вызов функции открытия попапа аватара\r\nprofileImage.addEventListener(\"click\", function () {\r\n  openModal(popupAvatar);\r\n  clearValidation(avatarForm, validationConfig);\r\n  clearState(popupAvatar);\r\n});\r\n\r\n// Вызов функции добавления новой карточки\r\nnewPlace.addEventListener(\"submit\", addNewCard);\r\n\r\n// Вызов функции редактирования профиля\r\nformElement.addEventListener(\"submit\", handleProfileFormSubmit);\r\n\r\n// Вызов функции включения валидации всех форм\r\nenableValidation(validationConfig);\r\n"],"names":["config","baseUrl","headers","authorization","getResponse","result","ok","json","Promise","reject","concat","status","deleteCardServer","id","fetch","method","then","cardTemplate","document","querySelector","content","createCard","item","openImagePopup","likedButton","profileResult","cardElement","cloneNode","deleteButton","cardLikeButton","likesCounter","cardImage","cardTitle","src","link","alt","name","textContent","likes","length","_id","owner","classList","add","some","like","addEventListener","evt","target","closest","remove","removeCard","catch","error","console","log","contains","res","putLike","openModal","closeByEsc","closeModal","removeEventListener","key","closePopupOverlay","currentTarget","hideInputError","formElement","popupInput","validationConfig","formError","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","clearValidation","popupFormElement","Array","from","querySelectorAll","forEach","allPopups","inactiveButtonClass","placesList","profile","profileInfo","profileEditButton","profileAddButton","profileTitle","profileDescription","profileImage","forms","nameInput","elements","jobInput","description","popupTypeImage","popupImage","popupCaption","popupTypeNewCard","popupTypeEdit","newPlace","placeName","popupAvatar","profileAvatar","avatarForm","avatarInputUrl","all","_ref","_ref2","cardsResult","about","style","backgroundImage","avatar","eachElement","append","clearState","inputElement","value","preventDefault","avatarUrl","formButton","submitter","defaultTextButton","body","JSON","stringify","reset","finally","postNewCard","newCardElement","prepend","patchEditProfile","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}